{"ast":null,"code":"const _excluded = [\"id\", \"autoFocus\", \"textField\", \"dataKey\", \"value\", \"defaultValue\", \"onChange\", \"open\", \"defaultOpen\", \"onToggle\", \"searchTerm\", \"defaultSearchTerm\", \"onSearch\", \"filter\", \"allowCreate\", \"delay\", \"focusFirstItem\", \"className\", \"containerClassName\", \"placeholder\", \"busy\", \"disabled\", \"readOnly\", \"selectIcon\", \"busySpinner\", \"dropUp\", \"tabIndex\", \"popupTransition\", \"name\", \"autoComplete\", \"onSelect\", \"onCreate\", \"onKeyPress\", \"onKeyDown\", \"onClick\", \"inputProps\", \"listProps\", \"popupProps\", \"renderListItem\", \"renderListGroup\", \"optionComponent\", \"renderValue\", \"groupBy\", \"onBlur\", \"onFocus\", \"listComponent\", \"popupComponent\", \"data\", \"messages\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport AddToListOption, { CREATE_OPTION } from './AddToListOption';\nimport DropdownListInput from './DropdownListInput';\nimport { caretDown } from './Icon';\nimport List from './List';\nimport { FocusListContext, useFocusList } from './FocusListContext';\nimport BasePopup from './Popup';\nimport Widget from './Widget';\nimport WidgetPicker from './WidgetPicker';\nimport { useActiveDescendant } from './A11y';\nimport { useFilteredData, presets } from './Filter';\nimport * as CustomPropTypes from './PropTypes';\nimport canShowCreate from './canShowCreate';\nimport { useAccessors } from './Accessors';\nimport useAutoFocus from './useAutoFocus';\nimport useDropdownToggle from './useDropdownToggle';\nimport useFocusManager from './useFocusManager';\nimport { useLocalizer } from './Localization';\nimport { notify, useFirstFocusedRender, useInstanceId } from './WidgetHelpers';\nimport PickerCaret from './PickerCaret';\nconst propTypes = {\n  value: PropTypes.any,\n  /**\n   * @type {function (\n   *  dataItems: ?any,\n   *  metadata: {\n   *    lastValue: ?any,\n   *    searchTerm: ?string\n   *    originalEvent: SyntheticEvent,\n   *  }\n   * ): void}\n   */\n  onChange: PropTypes.func,\n  open: PropTypes.bool,\n  onToggle: PropTypes.func,\n  data: PropTypes.array,\n  dataKey: CustomPropTypes.accessor,\n  textField: CustomPropTypes.accessor,\n  allowCreate: PropTypes.oneOf([true, false, 'onFilter']),\n  /**\n   * A React render prop for customizing the rendering of the DropdownList\n   * value\n   */\n  renderValue: PropTypes.func,\n  renderListItem: PropTypes.func,\n  listComponent: CustomPropTypes.elementType,\n  optionComponent: CustomPropTypes.elementType,\n  renderPopup: PropTypes.func,\n  renderListGroup: PropTypes.func,\n  groupBy: CustomPropTypes.accessor,\n  /**\n   *\n   * @type {(dataItem: ?any, metadata: { originalEvent: SyntheticEvent }) => void}\n   */\n  onSelect: PropTypes.func,\n  onCreate: PropTypes.func,\n  /**\n   * @type function(searchTerm: string, metadata: { action, lastSearchTerm, originalEvent? })\n   */\n  onSearch: PropTypes.func,\n  searchTerm: PropTypes.string,\n  busy: PropTypes.bool,\n  /** Specify the element used to render the select (down arrow) icon. */\n  selectIcon: PropTypes.node,\n  /** Specify the element used to render the busy indicator */\n  busySpinner: PropTypes.node,\n  placeholder: PropTypes.string,\n  dropUp: PropTypes.bool,\n  popupTransition: CustomPropTypes.elementType,\n  disabled: CustomPropTypes.disabled.acceptsArray,\n  readOnly: CustomPropTypes.disabled,\n  /** Adds a css class to the input container element. */\n  containerClassName: PropTypes.string,\n  inputProps: PropTypes.object,\n  listProps: PropTypes.object,\n  messages: PropTypes.shape({\n    open: PropTypes.string,\n    emptyList: CustomPropTypes.message,\n    emptyFilter: CustomPropTypes.message,\n    createOption: CustomPropTypes.message\n  })\n};\nfunction useSearchWordBuilder(delay) {\n  const timeout = useTimeout();\n  const wordRef = useRef('');\n  function search(character, cb) {\n    let word = (wordRef.current + character).toLowerCase();\n    if (!character) return;\n    wordRef.current = word;\n    timeout.set(() => {\n      wordRef.current = '';\n      cb(word);\n    }, delay);\n  }\n  return search;\n}\n\n/**\n * A `<select>` replacement for single value lists.\n * @public\n */\nconst DropdownListImpl = /*#__PURE__*/React.forwardRef(function DropdownList(_ref, outerRef) {\n  let {\n      id,\n      autoFocus,\n      textField,\n      dataKey,\n      value,\n      defaultValue,\n      onChange,\n      open,\n      defaultOpen = false,\n      onToggle,\n      searchTerm,\n      defaultSearchTerm = '',\n      onSearch,\n      filter = true,\n      allowCreate = false,\n      delay = 500,\n      focusFirstItem,\n      className,\n      containerClassName,\n      placeholder,\n      busy,\n      disabled,\n      readOnly,\n      selectIcon = caretDown,\n      busySpinner,\n      dropUp,\n      tabIndex,\n      popupTransition,\n      name,\n      autoComplete,\n      onSelect,\n      onCreate,\n      onKeyPress,\n      onKeyDown,\n      onClick,\n      inputProps,\n      listProps,\n      popupProps,\n      renderListItem,\n      renderListGroup,\n      optionComponent,\n      renderValue,\n      groupBy,\n      onBlur,\n      onFocus,\n      listComponent: ListComponent = List,\n      popupComponent: Popup = BasePopup,\n      data: rawData = [],\n      messages: userMessages\n    } = _ref,\n    elementProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [currentValue, handleChange] = useUncontrolledProp(value, defaultValue, onChange);\n  const [currentOpen, handleOpen] = useUncontrolledProp(open, defaultOpen, onToggle);\n  const [currentSearch, handleSearch] = useUncontrolledProp(searchTerm, defaultSearchTerm, onSearch);\n  const ref = useRef(null);\n  const filterRef = useRef(null);\n  const listRef = useRef(null);\n  const inputId = useInstanceId(id, '_input');\n  const listId = useInstanceId(id, '_listbox');\n  const activeId = useInstanceId(id, '_listbox_active_option');\n  const accessors = useAccessors(textField, dataKey);\n  const localizer = useLocalizer(userMessages);\n  useAutoFocus(!!autoFocus, ref);\n  const toggle = useDropdownToggle(currentOpen, handleOpen);\n  const isDisabled = disabled === true; // const disabledItems = toItemArray(disabled)\n\n  const isReadOnly = !!readOnly;\n  const [focusEvents, focused] = useFocusManager(ref, {\n    disabled: isDisabled,\n    onBlur,\n    onFocus\n  }, {\n    didHandle(focused) {\n      if (focused) {\n        if (filter) focus();\n        return;\n      }\n      toggle.close();\n      clearSearch();\n    }\n  });\n  const data = useFilteredData(rawData, currentOpen ? filter : false, currentSearch, accessors.text);\n  const selectedItem = useMemo(() => data[accessors.indexOf(data, currentValue)], [data, currentValue, accessors]);\n  const list = useFocusList({\n    activeId,\n    scope: ref,\n    focusFirstItem,\n    anchorItem: currentOpen ? selectedItem : undefined\n  });\n  const [autofilling, setAutofilling] = useState(false);\n  const nextSearchChar = useSearchWordBuilder(delay);\n  const focusedItem = list.getFocused();\n  useActiveDescendant(ref, activeId, focusedItem && currentOpen, [focusedItem]);\n  const showCreateOption = canShowCreate(allowCreate, {\n    searchTerm: currentSearch,\n    data,\n    accessors\n  });\n  const handleCreate = event => {\n    notify(onCreate, [currentSearch]);\n    clearSearch(event);\n    toggle.close();\n    focus();\n  };\n  const handleSelect = (dataItem, originalEvent) => {\n    if (readOnly || isDisabled) return;\n    if (dataItem === undefined) return;\n    originalEvent == null ? void 0 : originalEvent.preventDefault();\n    if (dataItem === CREATE_OPTION) {\n      handleCreate(originalEvent);\n      return;\n    }\n    notify(onSelect, [dataItem, {\n      originalEvent\n    }]);\n    change(dataItem, originalEvent, true);\n    toggle.close();\n    focus();\n  };\n  const handleClick = e => {\n    if (readOnly || isDisabled) return; // prevents double clicks when in a <label>\n\n    e.preventDefault();\n    focus();\n    toggle();\n    notify(onClick, [e]);\n  };\n  const handleKeyDown = e => {\n    if (readOnly || isDisabled) return;\n    let {\n      key,\n      altKey,\n      ctrlKey,\n      shiftKey\n    } = e;\n    notify(onKeyDown, [e]);\n    let closeWithFocus = () => {\n      clearSearch();\n      toggle.close();\n      if (currentOpen) setTimeout(focus);\n    };\n    if (e.defaultPrevented) return;\n    if (key === 'End' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      list.focus(list.last());\n    } else if (key === 'Home' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      list.focus(list.first());\n    } else if (key === 'Escape' && (currentOpen || currentSearch)) {\n      e.preventDefault();\n      closeWithFocus();\n    } else if (key === 'Enter' && currentOpen && ctrlKey && showCreateOption) {\n      e.preventDefault();\n      handleCreate(e);\n    } else if ((key === 'Enter' || key === ' ' && !filter) && currentOpen) {\n      e.preventDefault();\n      if (list.hasFocused()) handleSelect(list.getFocused(), e);\n    } else if (key === 'ArrowDown') {\n      e.preventDefault();\n      if (!currentOpen) {\n        toggle.open();\n        return;\n      }\n      list.focus(list.next());\n    } else if (key === 'ArrowUp') {\n      e.preventDefault();\n      if (altKey) return closeWithFocus();\n      list.focus(list.prev());\n    }\n  };\n  const handleKeyPress = e => {\n    if (readOnly || isDisabled) return;\n    notify(onKeyPress, [e]);\n    if (e.defaultPrevented || filter) return;\n    nextSearchChar(String.fromCharCode(e.which), word => {\n      if (!currentOpen) return;\n      let isValid = item => presets.startsWith(accessors.text(item).toLowerCase(), word.toLowerCase());\n      const [items, focusedItem] = list.get();\n      const len = items.length;\n      const startIdx = items.indexOf(focusedItem) + 1;\n      const offset = startIdx >= len ? 0 : startIdx;\n      let idx = 0;\n      let pointer = offset;\n      while (idx < len) {\n        pointer = (idx + offset) % len;\n        let item = items[pointer];\n        if (isValid(list.toDataItem(item))) break;\n        idx++;\n      }\n      if (idx === len) return;\n      list.focus(items[pointer]);\n    });\n  };\n  const handleInputChange = e => {\n    // hitting space to open\n    if (!currentOpen && !e.target.value.trim()) {\n      e.preventDefault();\n    } else {\n      search(e.target.value, e, 'input');\n    }\n    toggle.open();\n  };\n  const handleAutofillChange = e => {\n    let filledValue = e.target.value.toLowerCase();\n    if (filledValue === '') return void change(null);\n    for (const item of rawData) {\n      if (String(accessors.value(item)).toLowerCase() === filledValue || accessors.text(item).toLowerCase() === filledValue) {\n        change(item, e);\n        break;\n      }\n    }\n  };\n  function change(nextValue, originalEvent) {\n    let selected = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!accessors.matches(nextValue, currentValue)) {\n      notify(handleChange, [nextValue, {\n        originalEvent,\n        source: selected ? 'listbox' : 'input',\n        lastValue: currentValue,\n        searchTerm: currentSearch\n      }]);\n      clearSearch(originalEvent);\n      toggle.close();\n    }\n  }\n  function focus() {\n    if (filter) filterRef.current.focus();else ref.current.focus();\n  }\n  function clearSearch(originalEvent) {\n    search('', originalEvent, 'clear');\n  }\n  function search(nextSearchTerm, originalEvent) {\n    let action = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'input';\n    if (currentSearch !== nextSearchTerm) handleSearch(nextSearchTerm, {\n      action,\n      originalEvent,\n      lastSearchTerm: currentSearch\n    });\n  }\n  /**\n   * Render\n   */\n\n  useImperativeHandle(outerRef, () => ({\n    focus\n  }));\n  let valueItem = accessors.findOrSelf(data, currentValue);\n  let shouldRenderPopup = useFirstFocusedRender(focused, currentOpen);\n  const widgetProps = Object.assign({}, elementProps, {\n    role: 'combobox',\n    id: inputId,\n    //tab index when there is no filter input to take focus\n    tabIndex: filter ? -1 : tabIndex || 0,\n    // FIXME: only when item exists\n    'aria-owns': elementProps['aria-owns'] ? `${listId} ${elementProps['aria-owns']}` : listId,\n    'aria-controls': elementProps['aria-controls'] ? `${listId} ${elementProps['aria-controls']}` : listId,\n    'aria-expanded': !!currentOpen,\n    'aria-haspopup': 'listbox',\n    'aria-busy': !!busy,\n    'aria-live': currentOpen ? 'polite' : undefined,\n    'aria-autocomplete': 'list',\n    'aria-disabled': isDisabled,\n    'aria-readonly': isReadOnly\n  });\n  return /*#__PURE__*/React.createElement(FocusListContext.Provider, {\n    value: list.context\n  }, /*#__PURE__*/React.createElement(Widget, _extends({}, widgetProps, {\n    open: !!currentOpen,\n    dropUp: !!dropUp,\n    focused: !!focused,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    autofilling: autofilling\n  }, focusEvents, {\n    onKeyDown: handleKeyDown,\n    onKeyPress: handleKeyPress,\n    className: cn(className, 'rw-dropdown-list'),\n    ref: ref\n  }), /*#__PURE__*/React.createElement(WidgetPicker, {\n    onClick: handleClick,\n    tabIndex: filter ? -1 : 0,\n    className: cn(containerClassName, 'rw-widget-input')\n  }, /*#__PURE__*/React.createElement(DropdownListInput, _extends({}, inputProps, {\n    value: valueItem,\n    dataKeyAccessor: accessors.value,\n    textAccessor: accessors.text,\n    name: name,\n    readOnly: readOnly,\n    disabled: isDisabled,\n    allowSearch: !!filter,\n    searchTerm: currentSearch,\n    ref: filterRef,\n    autoComplete: autoComplete,\n    onSearch: handleInputChange,\n    onAutofill: setAutofilling,\n    onAutofillChange: handleAutofillChange,\n    placeholder: placeholder,\n    renderValue: renderValue\n  })), /*#__PURE__*/React.createElement(PickerCaret, {\n    visible: true,\n    busy: busy,\n    icon: selectIcon,\n    spinner: busySpinner\n  })), shouldRenderPopup && /*#__PURE__*/React.createElement(Popup, _extends({}, popupProps, {\n    dropUp: dropUp,\n    open: currentOpen,\n    transition: popupTransition,\n    onEntered: focus,\n    onEntering: () => listRef.current.scrollIntoView()\n  }), /*#__PURE__*/React.createElement(ListComponent, _extends({}, listProps, {\n    id: listId,\n    data: data,\n    tabIndex: -1,\n    disabled: disabled,\n    groupBy: groupBy,\n    searchTerm: currentSearch,\n    accessors: accessors,\n    renderItem: renderListItem,\n    renderGroup: renderListGroup,\n    optionComponent: optionComponent,\n    value: selectedItem,\n    onChange: (d, meta) => handleSelect(d, meta.originalEvent),\n    \"aria-live\": currentOpen ? 'polite' : undefined,\n    \"aria-labelledby\": inputId,\n    \"aria-hidden\": !currentOpen,\n    ref: listRef,\n    messages: {\n      emptyList: rawData.length ? localizer.messages.emptyFilter : localizer.messages.emptyList\n    }\n  })), showCreateOption && /*#__PURE__*/React.createElement(AddToListOption, {\n    onSelect: handleCreate\n  }, localizer.messages.createOption(currentValue, currentSearch || '')))));\n});\nDropdownListImpl.displayName = 'DropdownList';\nDropdownListImpl.propTypes = propTypes;\nexport default DropdownListImpl;","map":{"version":3,"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","cn","PropTypes","React","useImperativeHandle","useMemo","useRef","useState","useUncontrolledProp","useTimeout","AddToListOption","CREATE_OPTION","DropdownListInput","caretDown","List","FocusListContext","useFocusList","BasePopup","Widget","WidgetPicker","useActiveDescendant","useFilteredData","presets","CustomPropTypes","canShowCreate","useAccessors","useAutoFocus","useDropdownToggle","useFocusManager","useLocalizer","notify","useFirstFocusedRender","useInstanceId","PickerCaret","propTypes","value","any","onChange","func","open","bool","onToggle","data","array","dataKey","accessor","textField","allowCreate","oneOf","renderValue","renderListItem","listComponent","elementType","optionComponent","renderPopup","renderListGroup","groupBy","onSelect","onCreate","onSearch","searchTerm","string","busy","selectIcon","node","busySpinner","placeholder","dropUp","popupTransition","disabled","acceptsArray","readOnly","containerClassName","inputProps","object","listProps","messages","shape","emptyList","message","emptyFilter","createOption","useSearchWordBuilder","delay","timeout","wordRef","search","character","cb","word","current","toLowerCase","set","DropdownListImpl","forwardRef","DropdownList","_ref","outerRef","id","autoFocus","defaultValue","defaultOpen","defaultSearchTerm","filter","focusFirstItem","className","tabIndex","name","autoComplete","onKeyPress","onKeyDown","onClick","popupProps","onBlur","onFocus","ListComponent","popupComponent","Popup","rawData","userMessages","elementProps","currentValue","handleChange","currentOpen","handleOpen","currentSearch","handleSearch","ref","filterRef","listRef","inputId","listId","activeId","accessors","localizer","toggle","isDisabled","isReadOnly","focusEvents","focused","didHandle","focus","close","clearSearch","text","selectedItem","list","scope","anchorItem","undefined","autofilling","setAutofilling","nextSearchChar","focusedItem","getFocused","showCreateOption","handleCreate","event","handleSelect","dataItem","originalEvent","preventDefault","change","handleClick","e","handleKeyDown","altKey","ctrlKey","shiftKey","closeWithFocus","setTimeout","defaultPrevented","last","first","hasFocused","next","prev","handleKeyPress","String","fromCharCode","which","isValid","item","startsWith","items","get","len","startIdx","offset","idx","pointer","toDataItem","handleInputChange","trim","handleAutofillChange","filledValue","nextValue","selected","matches","lastValue","nextSearchTerm","action","lastSearchTerm","valueItem","findOrSelf","shouldRenderPopup","widgetProps","role","createElement","Provider","context","dataKeyAccessor","textAccessor","allowSearch","onAutofill","onAutofillChange","visible","icon","spinner","transition","onEntered","onEntering","scrollIntoView","renderItem","renderGroup","d","meta","displayName"],"sources":["C:/Users/Viktor/Desktop/TDDD27/Ny mapp/Third commit/node_modules/react-widgets/esm/DropdownList.js"],"sourcesContent":["const _excluded = [\"id\", \"autoFocus\", \"textField\", \"dataKey\", \"value\", \"defaultValue\", \"onChange\", \"open\", \"defaultOpen\", \"onToggle\", \"searchTerm\", \"defaultSearchTerm\", \"onSearch\", \"filter\", \"allowCreate\", \"delay\", \"focusFirstItem\", \"className\", \"containerClassName\", \"placeholder\", \"busy\", \"disabled\", \"readOnly\", \"selectIcon\", \"busySpinner\", \"dropUp\", \"tabIndex\", \"popupTransition\", \"name\", \"autoComplete\", \"onSelect\", \"onCreate\", \"onKeyPress\", \"onKeyDown\", \"onClick\", \"inputProps\", \"listProps\", \"popupProps\", \"renderListItem\", \"renderListGroup\", \"optionComponent\", \"renderValue\", \"groupBy\", \"onBlur\", \"onFocus\", \"listComponent\", \"popupComponent\", \"data\", \"messages\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport AddToListOption, { CREATE_OPTION } from './AddToListOption';\nimport DropdownListInput from './DropdownListInput';\nimport { caretDown } from './Icon';\nimport List from './List';\nimport { FocusListContext, useFocusList } from './FocusListContext';\nimport BasePopup from './Popup';\nimport Widget from './Widget';\nimport WidgetPicker from './WidgetPicker';\nimport { useActiveDescendant } from './A11y';\nimport { useFilteredData, presets } from './Filter';\nimport * as CustomPropTypes from './PropTypes';\nimport canShowCreate from './canShowCreate';\nimport { useAccessors } from './Accessors';\nimport useAutoFocus from './useAutoFocus';\nimport useDropdownToggle from './useDropdownToggle';\nimport useFocusManager from './useFocusManager';\nimport { useLocalizer } from './Localization';\nimport { notify, useFirstFocusedRender, useInstanceId } from './WidgetHelpers';\nimport PickerCaret from './PickerCaret';\nconst propTypes = {\n  value: PropTypes.any,\n\n  /**\n   * @type {function (\n   *  dataItems: ?any,\n   *  metadata: {\n   *    lastValue: ?any,\n   *    searchTerm: ?string\n   *    originalEvent: SyntheticEvent,\n   *  }\n   * ): void}\n   */\n  onChange: PropTypes.func,\n  open: PropTypes.bool,\n  onToggle: PropTypes.func,\n  data: PropTypes.array,\n  dataKey: CustomPropTypes.accessor,\n  textField: CustomPropTypes.accessor,\n  allowCreate: PropTypes.oneOf([true, false, 'onFilter']),\n\n  /**\n   * A React render prop for customizing the rendering of the DropdownList\n   * value\n   */\n  renderValue: PropTypes.func,\n  renderListItem: PropTypes.func,\n  listComponent: CustomPropTypes.elementType,\n  optionComponent: CustomPropTypes.elementType,\n  renderPopup: PropTypes.func,\n  renderListGroup: PropTypes.func,\n  groupBy: CustomPropTypes.accessor,\n\n  /**\n   *\n   * @type {(dataItem: ?any, metadata: { originalEvent: SyntheticEvent }) => void}\n   */\n  onSelect: PropTypes.func,\n  onCreate: PropTypes.func,\n\n  /**\n   * @type function(searchTerm: string, metadata: { action, lastSearchTerm, originalEvent? })\n   */\n  onSearch: PropTypes.func,\n  searchTerm: PropTypes.string,\n  busy: PropTypes.bool,\n\n  /** Specify the element used to render the select (down arrow) icon. */\n  selectIcon: PropTypes.node,\n\n  /** Specify the element used to render the busy indicator */\n  busySpinner: PropTypes.node,\n  placeholder: PropTypes.string,\n  dropUp: PropTypes.bool,\n  popupTransition: CustomPropTypes.elementType,\n  disabled: CustomPropTypes.disabled.acceptsArray,\n  readOnly: CustomPropTypes.disabled,\n\n  /** Adds a css class to the input container element. */\n  containerClassName: PropTypes.string,\n  inputProps: PropTypes.object,\n  listProps: PropTypes.object,\n  messages: PropTypes.shape({\n    open: PropTypes.string,\n    emptyList: CustomPropTypes.message,\n    emptyFilter: CustomPropTypes.message,\n    createOption: CustomPropTypes.message\n  })\n};\n\nfunction useSearchWordBuilder(delay) {\n  const timeout = useTimeout();\n  const wordRef = useRef('');\n\n  function search(character, cb) {\n    let word = (wordRef.current + character).toLowerCase();\n    if (!character) return;\n    wordRef.current = word;\n    timeout.set(() => {\n      wordRef.current = '';\n      cb(word);\n    }, delay);\n  }\n\n  return search;\n}\n\n/**\n * A `<select>` replacement for single value lists.\n * @public\n */\nconst DropdownListImpl = /*#__PURE__*/React.forwardRef(function DropdownList(_ref, outerRef) {\n  let {\n    id,\n    autoFocus,\n    textField,\n    dataKey,\n    value,\n    defaultValue,\n    onChange,\n    open,\n    defaultOpen = false,\n    onToggle,\n    searchTerm,\n    defaultSearchTerm = '',\n    onSearch,\n    filter = true,\n    allowCreate = false,\n    delay = 500,\n    focusFirstItem,\n    className,\n    containerClassName,\n    placeholder,\n    busy,\n    disabled,\n    readOnly,\n    selectIcon = caretDown,\n    busySpinner,\n    dropUp,\n    tabIndex,\n    popupTransition,\n    name,\n    autoComplete,\n    onSelect,\n    onCreate,\n    onKeyPress,\n    onKeyDown,\n    onClick,\n    inputProps,\n    listProps,\n    popupProps,\n    renderListItem,\n    renderListGroup,\n    optionComponent,\n    renderValue,\n    groupBy,\n    onBlur,\n    onFocus,\n    listComponent: ListComponent = List,\n    popupComponent: Popup = BasePopup,\n    data: rawData = [],\n    messages: userMessages\n  } = _ref,\n      elementProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [currentValue, handleChange] = useUncontrolledProp(value, defaultValue, onChange);\n  const [currentOpen, handleOpen] = useUncontrolledProp(open, defaultOpen, onToggle);\n  const [currentSearch, handleSearch] = useUncontrolledProp(searchTerm, defaultSearchTerm, onSearch);\n  const ref = useRef(null);\n  const filterRef = useRef(null);\n  const listRef = useRef(null);\n  const inputId = useInstanceId(id, '_input');\n  const listId = useInstanceId(id, '_listbox');\n  const activeId = useInstanceId(id, '_listbox_active_option');\n  const accessors = useAccessors(textField, dataKey);\n  const localizer = useLocalizer(userMessages);\n  useAutoFocus(!!autoFocus, ref);\n  const toggle = useDropdownToggle(currentOpen, handleOpen);\n  const isDisabled = disabled === true; // const disabledItems = toItemArray(disabled)\n\n  const isReadOnly = !!readOnly;\n  const [focusEvents, focused] = useFocusManager(ref, {\n    disabled: isDisabled,\n    onBlur,\n    onFocus\n  }, {\n    didHandle(focused) {\n      if (focused) {\n        if (filter) focus();\n        return;\n      }\n\n      toggle.close();\n      clearSearch();\n    }\n\n  });\n  const data = useFilteredData(rawData, currentOpen ? filter : false, currentSearch, accessors.text);\n  const selectedItem = useMemo(() => data[accessors.indexOf(data, currentValue)], [data, currentValue, accessors]);\n  const list = useFocusList({\n    activeId,\n    scope: ref,\n    focusFirstItem,\n    anchorItem: currentOpen ? selectedItem : undefined\n  });\n  const [autofilling, setAutofilling] = useState(false);\n  const nextSearchChar = useSearchWordBuilder(delay);\n  const focusedItem = list.getFocused();\n  useActiveDescendant(ref, activeId, focusedItem && currentOpen, [focusedItem]);\n  const showCreateOption = canShowCreate(allowCreate, {\n    searchTerm: currentSearch,\n    data,\n    accessors\n  });\n\n  const handleCreate = event => {\n    notify(onCreate, [currentSearch]);\n    clearSearch(event);\n    toggle.close();\n    focus();\n  };\n\n  const handleSelect = (dataItem, originalEvent) => {\n    if (readOnly || isDisabled) return;\n    if (dataItem === undefined) return;\n    originalEvent == null ? void 0 : originalEvent.preventDefault();\n\n    if (dataItem === CREATE_OPTION) {\n      handleCreate(originalEvent);\n      return;\n    }\n\n    notify(onSelect, [dataItem, {\n      originalEvent\n    }]);\n    change(dataItem, originalEvent, true);\n    toggle.close();\n    focus();\n  };\n\n  const handleClick = e => {\n    if (readOnly || isDisabled) return; // prevents double clicks when in a <label>\n\n    e.preventDefault();\n    focus();\n    toggle();\n    notify(onClick, [e]);\n  };\n\n  const handleKeyDown = e => {\n    if (readOnly || isDisabled) return;\n    let {\n      key,\n      altKey,\n      ctrlKey,\n      shiftKey\n    } = e;\n    notify(onKeyDown, [e]);\n\n    let closeWithFocus = () => {\n      clearSearch();\n      toggle.close();\n      if (currentOpen) setTimeout(focus);\n    };\n\n    if (e.defaultPrevented) return;\n\n    if (key === 'End' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      list.focus(list.last());\n    } else if (key === 'Home' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      list.focus(list.first());\n    } else if (key === 'Escape' && (currentOpen || currentSearch)) {\n      e.preventDefault();\n      closeWithFocus();\n    } else if (key === 'Enter' && currentOpen && ctrlKey && showCreateOption) {\n      e.preventDefault();\n      handleCreate(e);\n    } else if ((key === 'Enter' || key === ' ' && !filter) && currentOpen) {\n      e.preventDefault();\n      if (list.hasFocused()) handleSelect(list.getFocused(), e);\n    } else if (key === 'ArrowDown') {\n      e.preventDefault();\n\n      if (!currentOpen) {\n        toggle.open();\n        return;\n      }\n\n      list.focus(list.next());\n    } else if (key === 'ArrowUp') {\n      e.preventDefault();\n      if (altKey) return closeWithFocus();\n      list.focus(list.prev());\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (readOnly || isDisabled) return;\n    notify(onKeyPress, [e]);\n    if (e.defaultPrevented || filter) return;\n    nextSearchChar(String.fromCharCode(e.which), word => {\n      if (!currentOpen) return;\n\n      let isValid = item => presets.startsWith(accessors.text(item).toLowerCase(), word.toLowerCase());\n\n      const [items, focusedItem] = list.get();\n      const len = items.length;\n      const startIdx = items.indexOf(focusedItem) + 1;\n      const offset = startIdx >= len ? 0 : startIdx;\n      let idx = 0;\n      let pointer = offset;\n\n      while (idx < len) {\n        pointer = (idx + offset) % len;\n        let item = items[pointer];\n        if (isValid(list.toDataItem(item))) break;\n        idx++;\n      }\n\n      if (idx === len) return;\n      list.focus(items[pointer]);\n    });\n  };\n\n  const handleInputChange = e => {\n    // hitting space to open\n    if (!currentOpen && !e.target.value.trim()) {\n      e.preventDefault();\n    } else {\n      search(e.target.value, e, 'input');\n    }\n\n    toggle.open();\n  };\n\n  const handleAutofillChange = e => {\n    let filledValue = e.target.value.toLowerCase();\n    if (filledValue === '') return void change(null);\n\n    for (const item of rawData) {\n      if (String(accessors.value(item)).toLowerCase() === filledValue || accessors.text(item).toLowerCase() === filledValue) {\n        change(item, e);\n        break;\n      }\n    }\n  };\n\n  function change(nextValue, originalEvent, selected = false) {\n    if (!accessors.matches(nextValue, currentValue)) {\n      notify(handleChange, [nextValue, {\n        originalEvent,\n        source: selected ? 'listbox' : 'input',\n        lastValue: currentValue,\n        searchTerm: currentSearch\n      }]);\n      clearSearch(originalEvent);\n      toggle.close();\n    }\n  }\n\n  function focus() {\n    if (filter) filterRef.current.focus();else ref.current.focus();\n  }\n\n  function clearSearch(originalEvent) {\n    search('', originalEvent, 'clear');\n  }\n\n  function search(nextSearchTerm, originalEvent, action = 'input') {\n    if (currentSearch !== nextSearchTerm) handleSearch(nextSearchTerm, {\n      action,\n      originalEvent,\n      lastSearchTerm: currentSearch\n    });\n  }\n  /**\n   * Render\n   */\n\n\n  useImperativeHandle(outerRef, () => ({\n    focus\n  }));\n  let valueItem = accessors.findOrSelf(data, currentValue);\n  let shouldRenderPopup = useFirstFocusedRender(focused, currentOpen);\n  const widgetProps = Object.assign({}, elementProps, {\n    role: 'combobox',\n    id: inputId,\n    //tab index when there is no filter input to take focus\n    tabIndex: filter ? -1 : tabIndex || 0,\n    // FIXME: only when item exists\n    'aria-owns': elementProps['aria-owns'] ? `${listId} ${elementProps['aria-owns']}` : listId,\n    'aria-controls': elementProps['aria-controls'] ? `${listId} ${elementProps['aria-controls']}` : listId,\n    'aria-expanded': !!currentOpen,\n    'aria-haspopup': 'listbox',\n    'aria-busy': !!busy,\n    'aria-live': currentOpen ? 'polite' : undefined,\n    'aria-autocomplete': 'list',\n    'aria-disabled': isDisabled,\n    'aria-readonly': isReadOnly\n  });\n  return /*#__PURE__*/React.createElement(FocusListContext.Provider, {\n    value: list.context\n  }, /*#__PURE__*/React.createElement(Widget, _extends({}, widgetProps, {\n    open: !!currentOpen,\n    dropUp: !!dropUp,\n    focused: !!focused,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    autofilling: autofilling\n  }, focusEvents, {\n    onKeyDown: handleKeyDown,\n    onKeyPress: handleKeyPress,\n    className: cn(className, 'rw-dropdown-list'),\n    ref: ref\n  }), /*#__PURE__*/React.createElement(WidgetPicker, {\n    onClick: handleClick,\n    tabIndex: filter ? -1 : 0,\n    className: cn(containerClassName, 'rw-widget-input')\n  }, /*#__PURE__*/React.createElement(DropdownListInput, _extends({}, inputProps, {\n    value: valueItem,\n    dataKeyAccessor: accessors.value,\n    textAccessor: accessors.text,\n    name: name,\n    readOnly: readOnly,\n    disabled: isDisabled,\n    allowSearch: !!filter,\n    searchTerm: currentSearch,\n    ref: filterRef,\n    autoComplete: autoComplete,\n    onSearch: handleInputChange,\n    onAutofill: setAutofilling,\n    onAutofillChange: handleAutofillChange,\n    placeholder: placeholder,\n    renderValue: renderValue\n  })), /*#__PURE__*/React.createElement(PickerCaret, {\n    visible: true,\n    busy: busy,\n    icon: selectIcon,\n    spinner: busySpinner\n  })), shouldRenderPopup && /*#__PURE__*/React.createElement(Popup, _extends({}, popupProps, {\n    dropUp: dropUp,\n    open: currentOpen,\n    transition: popupTransition,\n    onEntered: focus,\n    onEntering: () => listRef.current.scrollIntoView()\n  }), /*#__PURE__*/React.createElement(ListComponent, _extends({}, listProps, {\n    id: listId,\n    data: data,\n    tabIndex: -1,\n    disabled: disabled,\n    groupBy: groupBy,\n    searchTerm: currentSearch,\n    accessors: accessors,\n    renderItem: renderListItem,\n    renderGroup: renderListGroup,\n    optionComponent: optionComponent,\n    value: selectedItem,\n    onChange: (d, meta) => handleSelect(d, meta.originalEvent),\n    \"aria-live\": currentOpen ? 'polite' : undefined,\n    \"aria-labelledby\": inputId,\n    \"aria-hidden\": !currentOpen,\n    ref: listRef,\n    messages: {\n      emptyList: rawData.length ? localizer.messages.emptyFilter : localizer.messages.emptyList\n    }\n  })), showCreateOption && /*#__PURE__*/React.createElement(AddToListOption, {\n    onSelect: handleCreate\n  }, localizer.messages.createOption(currentValue, currentSearch || '')))));\n});\nDropdownListImpl.displayName = 'DropdownList';\nDropdownListImpl.propTypes = propTypes;\nexport default DropdownListImpl;"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,YAAY,EAAE,mBAAmB,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,oBAAoB,EAAE,aAAa,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,QAAQ,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,EAAE,gBAAgB,EAAE,MAAM,EAAE,UAAU,CAAC;AAE7pB,SAASC,QAAQA,CAAA,EAAG;EAAEA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAAUC,MAAM,EAAE;IAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;MAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;QAAE,IAAIN,MAAM,CAACQ,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;UAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;QAAE;MAAE;IAAE;IAAE,OAAOL,MAAM;EAAE,CAAC;EAAE,OAAOH,QAAQ,CAACY,KAAK,CAAC,IAAI,EAAEP,SAAS,CAAC;AAAE;AAE5T,SAASQ,6BAA6BA,CAACN,MAAM,EAAEO,QAAQ,EAAE;EAAE,IAAIP,MAAM,IAAI,IAAI,EAAE,OAAO,CAAC,CAAC;EAAE,IAAIJ,MAAM,GAAG,CAAC,CAAC;EAAE,IAAIY,UAAU,GAAGd,MAAM,CAACe,IAAI,CAACT,MAAM,CAAC;EAAE,IAAIC,GAAG,EAAEJ,CAAC;EAAE,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,UAAU,CAACT,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAEI,GAAG,GAAGO,UAAU,CAACX,CAAC,CAAC;IAAE,IAAIU,QAAQ,CAACG,OAAO,CAACT,GAAG,CAAC,IAAI,CAAC,EAAE;IAAUL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;EAAE;EAAE,OAAOL,MAAM;AAAE;AAElT,OAAOe,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,mBAAmB,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,eAAe,IAAIC,aAAa,QAAQ,mBAAmB;AAClE,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,oBAAoB;AACnE,OAAOC,SAAS,MAAM,SAAS;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,mBAAmB,QAAQ,QAAQ;AAC5C,SAASC,eAAe,EAAEC,OAAO,QAAQ,UAAU;AACnD,OAAO,KAAKC,eAAe,MAAM,aAAa;AAC9C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,MAAM,EAAEC,qBAAqB,EAAEC,aAAa,QAAQ,iBAAiB;AAC9E,OAAOC,WAAW,MAAM,eAAe;AACvC,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAEjC,SAAS,CAACkC,GAAG;EAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAEnC,SAAS,CAACoC,IAAI;EACxBC,IAAI,EAAErC,SAAS,CAACsC,IAAI;EACpBC,QAAQ,EAAEvC,SAAS,CAACoC,IAAI;EACxBI,IAAI,EAAExC,SAAS,CAACyC,KAAK;EACrBC,OAAO,EAAErB,eAAe,CAACsB,QAAQ;EACjCC,SAAS,EAAEvB,eAAe,CAACsB,QAAQ;EACnCE,WAAW,EAAE7C,SAAS,CAAC8C,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;EAEvD;AACF;AACA;AACA;EACEC,WAAW,EAAE/C,SAAS,CAACoC,IAAI;EAC3BY,cAAc,EAAEhD,SAAS,CAACoC,IAAI;EAC9Ba,aAAa,EAAE5B,eAAe,CAAC6B,WAAW;EAC1CC,eAAe,EAAE9B,eAAe,CAAC6B,WAAW;EAC5CE,WAAW,EAAEpD,SAAS,CAACoC,IAAI;EAC3BiB,eAAe,EAAErD,SAAS,CAACoC,IAAI;EAC/BkB,OAAO,EAAEjC,eAAe,CAACsB,QAAQ;EAEjC;AACF;AACA;AACA;EACEY,QAAQ,EAAEvD,SAAS,CAACoC,IAAI;EACxBoB,QAAQ,EAAExD,SAAS,CAACoC,IAAI;EAExB;AACF;AACA;EACEqB,QAAQ,EAAEzD,SAAS,CAACoC,IAAI;EACxBsB,UAAU,EAAE1D,SAAS,CAAC2D,MAAM;EAC5BC,IAAI,EAAE5D,SAAS,CAACsC,IAAI;EAEpB;EACAuB,UAAU,EAAE7D,SAAS,CAAC8D,IAAI;EAE1B;EACAC,WAAW,EAAE/D,SAAS,CAAC8D,IAAI;EAC3BE,WAAW,EAAEhE,SAAS,CAAC2D,MAAM;EAC7BM,MAAM,EAAEjE,SAAS,CAACsC,IAAI;EACtB4B,eAAe,EAAE7C,eAAe,CAAC6B,WAAW;EAC5CiB,QAAQ,EAAE9C,eAAe,CAAC8C,QAAQ,CAACC,YAAY;EAC/CC,QAAQ,EAAEhD,eAAe,CAAC8C,QAAQ;EAElC;EACAG,kBAAkB,EAAEtE,SAAS,CAAC2D,MAAM;EACpCY,UAAU,EAAEvE,SAAS,CAACwE,MAAM;EAC5BC,SAAS,EAAEzE,SAAS,CAACwE,MAAM;EAC3BE,QAAQ,EAAE1E,SAAS,CAAC2E,KAAK,CAAC;IACxBtC,IAAI,EAAErC,SAAS,CAAC2D,MAAM;IACtBiB,SAAS,EAAEvD,eAAe,CAACwD,OAAO;IAClCC,WAAW,EAAEzD,eAAe,CAACwD,OAAO;IACpCE,YAAY,EAAE1D,eAAe,CAACwD;EAChC,CAAC;AACH,CAAC;AAED,SAASG,oBAAoBA,CAACC,KAAK,EAAE;EACnC,MAAMC,OAAO,GAAG3E,UAAU,EAAE;EAC5B,MAAM4E,OAAO,GAAG/E,MAAM,CAAC,EAAE,CAAC;EAE1B,SAASgF,MAAMA,CAACC,SAAS,EAAEC,EAAE,EAAE;IAC7B,IAAIC,IAAI,GAAG,CAACJ,OAAO,CAACK,OAAO,GAAGH,SAAS,EAAEI,WAAW,EAAE;IACtD,IAAI,CAACJ,SAAS,EAAE;IAChBF,OAAO,CAACK,OAAO,GAAGD,IAAI;IACtBL,OAAO,CAACQ,GAAG,CAAC,MAAM;MAChBP,OAAO,CAACK,OAAO,GAAG,EAAE;MACpBF,EAAE,CAACC,IAAI,CAAC;IACV,CAAC,EAAEN,KAAK,CAAC;EACX;EAEA,OAAOG,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,MAAMO,gBAAgB,GAAG,aAAa1F,KAAK,CAAC2F,UAAU,CAAC,SAASC,YAAYA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAC3F,IAAI;MACFC,EAAE;MACFC,SAAS;MACTrD,SAAS;MACTF,OAAO;MACPT,KAAK;MACLiE,YAAY;MACZ/D,QAAQ;MACRE,IAAI;MACJ8D,WAAW,GAAG,KAAK;MACnB5D,QAAQ;MACRmB,UAAU;MACV0C,iBAAiB,GAAG,EAAE;MACtB3C,QAAQ;MACR4C,MAAM,GAAG,IAAI;MACbxD,WAAW,GAAG,KAAK;MACnBoC,KAAK,GAAG,GAAG;MACXqB,cAAc;MACdC,SAAS;MACTjC,kBAAkB;MAClBN,WAAW;MACXJ,IAAI;MACJO,QAAQ;MACRE,QAAQ;MACRR,UAAU,GAAGlD,SAAS;MACtBoD,WAAW;MACXE,MAAM;MACNuC,QAAQ;MACRtC,eAAe;MACfuC,IAAI;MACJC,YAAY;MACZnD,QAAQ;MACRC,QAAQ;MACRmD,UAAU;MACVC,SAAS;MACTC,OAAO;MACPtC,UAAU;MACVE,SAAS;MACTqC,UAAU;MACV9D,cAAc;MACdK,eAAe;MACfF,eAAe;MACfJ,WAAW;MACXO,OAAO;MACPyD,MAAM;MACNC,OAAO;MACP/D,aAAa,EAAEgE,aAAa,GAAGrG,IAAI;MACnCsG,cAAc,EAAEC,KAAK,GAAGpG,SAAS;MACjCyB,IAAI,EAAE4E,OAAO,GAAG,EAAE;MAClB1C,QAAQ,EAAE2C;IACZ,CAAC,GAAGvB,IAAI;IACJwB,YAAY,GAAG5H,6BAA6B,CAACoG,IAAI,EAAElH,SAAS,CAAC;EAEjE,MAAM,CAAC2I,YAAY,EAAEC,YAAY,CAAC,GAAGlH,mBAAmB,CAAC2B,KAAK,EAAEiE,YAAY,EAAE/D,QAAQ,CAAC;EACvF,MAAM,CAACsF,WAAW,EAAEC,UAAU,CAAC,GAAGpH,mBAAmB,CAAC+B,IAAI,EAAE8D,WAAW,EAAE5D,QAAQ,CAAC;EAClF,MAAM,CAACoF,aAAa,EAAEC,YAAY,CAAC,GAAGtH,mBAAmB,CAACoD,UAAU,EAAE0C,iBAAiB,EAAE3C,QAAQ,CAAC;EAClG,MAAMoE,GAAG,GAAGzH,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM0H,SAAS,GAAG1H,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM2H,OAAO,GAAG3H,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM4H,OAAO,GAAGlG,aAAa,CAACkE,EAAE,EAAE,QAAQ,CAAC;EAC3C,MAAMiC,MAAM,GAAGnG,aAAa,CAACkE,EAAE,EAAE,UAAU,CAAC;EAC5C,MAAMkC,QAAQ,GAAGpG,aAAa,CAACkE,EAAE,EAAE,wBAAwB,CAAC;EAC5D,MAAMmC,SAAS,GAAG5G,YAAY,CAACqB,SAAS,EAAEF,OAAO,CAAC;EAClD,MAAM0F,SAAS,GAAGzG,YAAY,CAAC0F,YAAY,CAAC;EAC5C7F,YAAY,CAAC,CAAC,CAACyE,SAAS,EAAE4B,GAAG,CAAC;EAC9B,MAAMQ,MAAM,GAAG5G,iBAAiB,CAACgG,WAAW,EAAEC,UAAU,CAAC;EACzD,MAAMY,UAAU,GAAGnE,QAAQ,KAAK,IAAI,CAAC,CAAC;;EAEtC,MAAMoE,UAAU,GAAG,CAAC,CAAClE,QAAQ;EAC7B,MAAM,CAACmE,WAAW,EAAEC,OAAO,CAAC,GAAG/G,eAAe,CAACmG,GAAG,EAAE;IAClD1D,QAAQ,EAAEmE,UAAU;IACpBvB,MAAM;IACNC;EACF,CAAC,EAAE;IACD0B,SAASA,CAACD,OAAO,EAAE;MACjB,IAAIA,OAAO,EAAE;QACX,IAAIpC,MAAM,EAAEsC,KAAK,EAAE;QACnB;MACF;MAEAN,MAAM,CAACO,KAAK,EAAE;MACdC,WAAW,EAAE;IACf;EAEF,CAAC,CAAC;EACF,MAAMrG,IAAI,GAAGrB,eAAe,CAACiG,OAAO,EAAEK,WAAW,GAAGpB,MAAM,GAAG,KAAK,EAAEsB,aAAa,EAAEQ,SAAS,CAACW,IAAI,CAAC;EAClG,MAAMC,YAAY,GAAG5I,OAAO,CAAC,MAAMqC,IAAI,CAAC2F,SAAS,CAACrI,OAAO,CAAC0C,IAAI,EAAE+E,YAAY,CAAC,CAAC,EAAE,CAAC/E,IAAI,EAAE+E,YAAY,EAAEY,SAAS,CAAC,CAAC;EAChH,MAAMa,IAAI,GAAGlI,YAAY,CAAC;IACxBoH,QAAQ;IACRe,KAAK,EAAEpB,GAAG;IACVvB,cAAc;IACd4C,UAAU,EAAEzB,WAAW,GAAGsB,YAAY,GAAGI;EAC3C,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhJ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMiJ,cAAc,GAAGtE,oBAAoB,CAACC,KAAK,CAAC;EAClD,MAAMsE,WAAW,GAAGP,IAAI,CAACQ,UAAU,EAAE;EACrCtI,mBAAmB,CAAC2G,GAAG,EAAEK,QAAQ,EAAEqB,WAAW,IAAI9B,WAAW,EAAE,CAAC8B,WAAW,CAAC,CAAC;EAC7E,MAAME,gBAAgB,GAAGnI,aAAa,CAACuB,WAAW,EAAE;IAClDa,UAAU,EAAEiE,aAAa;IACzBnF,IAAI;IACJ2F;EACF,CAAC,CAAC;EAEF,MAAMuB,YAAY,GAAGC,KAAK,IAAI;IAC5B/H,MAAM,CAAC4B,QAAQ,EAAE,CAACmE,aAAa,CAAC,CAAC;IACjCkB,WAAW,CAACc,KAAK,CAAC;IAClBtB,MAAM,CAACO,KAAK,EAAE;IACdD,KAAK,EAAE;EACT,CAAC;EAED,MAAMiB,YAAY,GAAGA,CAACC,QAAQ,EAAEC,aAAa,KAAK;IAChD,IAAIzF,QAAQ,IAAIiE,UAAU,EAAE;IAC5B,IAAIuB,QAAQ,KAAKV,SAAS,EAAE;IAC5BW,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACC,cAAc,EAAE;IAE/D,IAAIF,QAAQ,KAAKpJ,aAAa,EAAE;MAC9BiJ,YAAY,CAACI,aAAa,CAAC;MAC3B;IACF;IAEAlI,MAAM,CAAC2B,QAAQ,EAAE,CAACsG,QAAQ,EAAE;MAC1BC;IACF,CAAC,CAAC,CAAC;IACHE,MAAM,CAACH,QAAQ,EAAEC,aAAa,EAAE,IAAI,CAAC;IACrCzB,MAAM,CAACO,KAAK,EAAE;IACdD,KAAK,EAAE;EACT,CAAC;EAED,MAAMsB,WAAW,GAAGC,CAAC,IAAI;IACvB,IAAI7F,QAAQ,IAAIiE,UAAU,EAAE,OAAO,CAAC;;IAEpC4B,CAAC,CAACH,cAAc,EAAE;IAClBpB,KAAK,EAAE;IACPN,MAAM,EAAE;IACRzG,MAAM,CAACiF,OAAO,EAAE,CAACqD,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMC,aAAa,GAAGD,CAAC,IAAI;IACzB,IAAI7F,QAAQ,IAAIiE,UAAU,EAAE;IAC5B,IAAI;MACFjJ,GAAG;MACH+K,MAAM;MACNC,OAAO;MACPC;IACF,CAAC,GAAGJ,CAAC;IACLtI,MAAM,CAACgF,SAAS,EAAE,CAACsD,CAAC,CAAC,CAAC;IAEtB,IAAIK,cAAc,GAAGA,CAAA,KAAM;MACzB1B,WAAW,EAAE;MACbR,MAAM,CAACO,KAAK,EAAE;MACd,IAAInB,WAAW,EAAE+C,UAAU,CAAC7B,KAAK,CAAC;IACpC,CAAC;IAED,IAAIuB,CAAC,CAACO,gBAAgB,EAAE;IAExB,IAAIpL,GAAG,KAAK,KAAK,IAAIoI,WAAW,IAAI,CAAC6C,QAAQ,EAAE;MAC7CJ,CAAC,CAACH,cAAc,EAAE;MAClBf,IAAI,CAACL,KAAK,CAACK,IAAI,CAAC0B,IAAI,EAAE,CAAC;IACzB,CAAC,MAAM,IAAIrL,GAAG,KAAK,MAAM,IAAIoI,WAAW,IAAI,CAAC6C,QAAQ,EAAE;MACrDJ,CAAC,CAACH,cAAc,EAAE;MAClBf,IAAI,CAACL,KAAK,CAACK,IAAI,CAAC2B,KAAK,EAAE,CAAC;IAC1B,CAAC,MAAM,IAAItL,GAAG,KAAK,QAAQ,KAAKoI,WAAW,IAAIE,aAAa,CAAC,EAAE;MAC7DuC,CAAC,CAACH,cAAc,EAAE;MAClBQ,cAAc,EAAE;IAClB,CAAC,MAAM,IAAIlL,GAAG,KAAK,OAAO,IAAIoI,WAAW,IAAI4C,OAAO,IAAIZ,gBAAgB,EAAE;MACxES,CAAC,CAACH,cAAc,EAAE;MAClBL,YAAY,CAACQ,CAAC,CAAC;IACjB,CAAC,MAAM,IAAI,CAAC7K,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,GAAG,IAAI,CAACgH,MAAM,KAAKoB,WAAW,EAAE;MACrEyC,CAAC,CAACH,cAAc,EAAE;MAClB,IAAIf,IAAI,CAAC4B,UAAU,EAAE,EAAEhB,YAAY,CAACZ,IAAI,CAACQ,UAAU,EAAE,EAAEU,CAAC,CAAC;IAC3D,CAAC,MAAM,IAAI7K,GAAG,KAAK,WAAW,EAAE;MAC9B6K,CAAC,CAACH,cAAc,EAAE;MAElB,IAAI,CAACtC,WAAW,EAAE;QAChBY,MAAM,CAAChG,IAAI,EAAE;QACb;MACF;MAEA2G,IAAI,CAACL,KAAK,CAACK,IAAI,CAAC6B,IAAI,EAAE,CAAC;IACzB,CAAC,MAAM,IAAIxL,GAAG,KAAK,SAAS,EAAE;MAC5B6K,CAAC,CAACH,cAAc,EAAE;MAClB,IAAIK,MAAM,EAAE,OAAOG,cAAc,EAAE;MACnCvB,IAAI,CAACL,KAAK,CAACK,IAAI,CAAC8B,IAAI,EAAE,CAAC;IACzB;EACF,CAAC;EAED,MAAMC,cAAc,GAAGb,CAAC,IAAI;IAC1B,IAAI7F,QAAQ,IAAIiE,UAAU,EAAE;IAC5B1G,MAAM,CAAC+E,UAAU,EAAE,CAACuD,CAAC,CAAC,CAAC;IACvB,IAAIA,CAAC,CAACO,gBAAgB,IAAIpE,MAAM,EAAE;IAClCiD,cAAc,CAAC0B,MAAM,CAACC,YAAY,CAACf,CAAC,CAACgB,KAAK,CAAC,EAAE3F,IAAI,IAAI;MACnD,IAAI,CAACkC,WAAW,EAAE;MAElB,IAAI0D,OAAO,GAAGC,IAAI,IAAIhK,OAAO,CAACiK,UAAU,CAAClD,SAAS,CAACW,IAAI,CAACsC,IAAI,CAAC,CAAC3F,WAAW,EAAE,EAAEF,IAAI,CAACE,WAAW,EAAE,CAAC;MAEhG,MAAM,CAAC6F,KAAK,EAAE/B,WAAW,CAAC,GAAGP,IAAI,CAACuC,GAAG,EAAE;MACvC,MAAMC,GAAG,GAAGF,KAAK,CAACnM,MAAM;MACxB,MAAMsM,QAAQ,GAAGH,KAAK,CAACxL,OAAO,CAACyJ,WAAW,CAAC,GAAG,CAAC;MAC/C,MAAMmC,MAAM,GAAGD,QAAQ,IAAID,GAAG,GAAG,CAAC,GAAGC,QAAQ;MAC7C,IAAIE,GAAG,GAAG,CAAC;MACX,IAAIC,OAAO,GAAGF,MAAM;MAEpB,OAAOC,GAAG,GAAGH,GAAG,EAAE;QAChBI,OAAO,GAAG,CAACD,GAAG,GAAGD,MAAM,IAAIF,GAAG;QAC9B,IAAIJ,IAAI,GAAGE,KAAK,CAACM,OAAO,CAAC;QACzB,IAAIT,OAAO,CAACnC,IAAI,CAAC6C,UAAU,CAACT,IAAI,CAAC,CAAC,EAAE;QACpCO,GAAG,EAAE;MACP;MAEA,IAAIA,GAAG,KAAKH,GAAG,EAAE;MACjBxC,IAAI,CAACL,KAAK,CAAC2C,KAAK,CAACM,OAAO,CAAC,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,iBAAiB,GAAG5B,CAAC,IAAI;IAC7B;IACA,IAAI,CAACzC,WAAW,IAAI,CAACyC,CAAC,CAAClL,MAAM,CAACiD,KAAK,CAAC8J,IAAI,EAAE,EAAE;MAC1C7B,CAAC,CAACH,cAAc,EAAE;IACpB,CAAC,MAAM;MACL3E,MAAM,CAAC8E,CAAC,CAAClL,MAAM,CAACiD,KAAK,EAAEiI,CAAC,EAAE,OAAO,CAAC;IACpC;IAEA7B,MAAM,CAAChG,IAAI,EAAE;EACf,CAAC;EAED,MAAM2J,oBAAoB,GAAG9B,CAAC,IAAI;IAChC,IAAI+B,WAAW,GAAG/B,CAAC,CAAClL,MAAM,CAACiD,KAAK,CAACwD,WAAW,EAAE;IAC9C,IAAIwG,WAAW,KAAK,EAAE,EAAE,OAAO,KAAKjC,MAAM,CAAC,IAAI,CAAC;IAEhD,KAAK,MAAMoB,IAAI,IAAIhE,OAAO,EAAE;MAC1B,IAAI4D,MAAM,CAAC7C,SAAS,CAAClG,KAAK,CAACmJ,IAAI,CAAC,CAAC,CAAC3F,WAAW,EAAE,KAAKwG,WAAW,IAAI9D,SAAS,CAACW,IAAI,CAACsC,IAAI,CAAC,CAAC3F,WAAW,EAAE,KAAKwG,WAAW,EAAE;QACrHjC,MAAM,CAACoB,IAAI,EAAElB,CAAC,CAAC;QACf;MACF;IACF;EACF,CAAC;EAED,SAASF,MAAMA,CAACkC,SAAS,EAAEpC,aAAa,EAAoB;IAAA,IAAlBqC,QAAQ,GAAAjN,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAiK,SAAA,GAAAjK,SAAA,MAAG,KAAK;IACxD,IAAI,CAACiJ,SAAS,CAACiE,OAAO,CAACF,SAAS,EAAE3E,YAAY,CAAC,EAAE;MAC/C3F,MAAM,CAAC4F,YAAY,EAAE,CAAC0E,SAAS,EAAE;QAC/BpC,aAAa;QACb1K,MAAM,EAAE+M,QAAQ,GAAG,SAAS,GAAG,OAAO;QACtCE,SAAS,EAAE9E,YAAY;QACvB7D,UAAU,EAAEiE;MACd,CAAC,CAAC,CAAC;MACHkB,WAAW,CAACiB,aAAa,CAAC;MAC1BzB,MAAM,CAACO,KAAK,EAAE;IAChB;EACF;EAEA,SAASD,KAAKA,CAAA,EAAG;IACf,IAAItC,MAAM,EAAEyB,SAAS,CAACtC,OAAO,CAACmD,KAAK,EAAE,CAAC,KAAKd,GAAG,CAACrC,OAAO,CAACmD,KAAK,EAAE;EAChE;EAEA,SAASE,WAAWA,CAACiB,aAAa,EAAE;IAClC1E,MAAM,CAAC,EAAE,EAAE0E,aAAa,EAAE,OAAO,CAAC;EACpC;EAEA,SAAS1E,MAAMA,CAACkH,cAAc,EAAExC,aAAa,EAAoB;IAAA,IAAlByC,MAAM,GAAArN,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAiK,SAAA,GAAAjK,SAAA,MAAG,OAAO;IAC7D,IAAIyI,aAAa,KAAK2E,cAAc,EAAE1E,YAAY,CAAC0E,cAAc,EAAE;MACjEC,MAAM;MACNzC,aAAa;MACb0C,cAAc,EAAE7E;IAClB,CAAC,CAAC;EACJ;EACA;AACF;AACA;;EAGEzH,mBAAmB,CAAC6F,QAAQ,EAAE,OAAO;IACnC4C;EACF,CAAC,CAAC,CAAC;EACH,IAAI8D,SAAS,GAAGtE,SAAS,CAACuE,UAAU,CAAClK,IAAI,EAAE+E,YAAY,CAAC;EACxD,IAAIoF,iBAAiB,GAAG9K,qBAAqB,CAAC4G,OAAO,EAAEhB,WAAW,CAAC;EACnE,MAAMmF,WAAW,GAAG9N,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEuI,YAAY,EAAE;IAClDuF,IAAI,EAAE,UAAU;IAChB7G,EAAE,EAAEgC,OAAO;IACX;IACAxB,QAAQ,EAAEH,MAAM,GAAG,CAAC,CAAC,GAAGG,QAAQ,IAAI,CAAC;IACrC;IACA,WAAW,EAAEc,YAAY,CAAC,WAAW,CAAC,GAAI,GAAEW,MAAO,IAAGX,YAAY,CAAC,WAAW,CAAE,EAAC,GAAGW,MAAM;IAC1F,eAAe,EAAEX,YAAY,CAAC,eAAe,CAAC,GAAI,GAAEW,MAAO,IAAGX,YAAY,CAAC,eAAe,CAAE,EAAC,GAAGW,MAAM;IACtG,eAAe,EAAE,CAAC,CAACR,WAAW;IAC9B,eAAe,EAAE,SAAS;IAC1B,WAAW,EAAE,CAAC,CAAC7D,IAAI;IACnB,WAAW,EAAE6D,WAAW,GAAG,QAAQ,GAAG0B,SAAS;IAC/C,mBAAmB,EAAE,MAAM;IAC3B,eAAe,EAAEb,UAAU;IAC3B,eAAe,EAAEC;EACnB,CAAC,CAAC;EACF,OAAO,aAAatI,KAAK,CAAC6M,aAAa,CAACjM,gBAAgB,CAACkM,QAAQ,EAAE;IACjE9K,KAAK,EAAE+G,IAAI,CAACgE;EACd,CAAC,EAAE,aAAa/M,KAAK,CAAC6M,aAAa,CAAC9L,MAAM,EAAEnC,QAAQ,CAAC,CAAC,CAAC,EAAE+N,WAAW,EAAE;IACpEvK,IAAI,EAAE,CAAC,CAACoF,WAAW;IACnBxD,MAAM,EAAE,CAAC,CAACA,MAAM;IAChBwE,OAAO,EAAE,CAAC,CAACA,OAAO;IAClBtE,QAAQ,EAAEmE,UAAU;IACpBjE,QAAQ,EAAEkE,UAAU;IACpBa,WAAW,EAAEA;EACf,CAAC,EAAEZ,WAAW,EAAE;IACd5B,SAAS,EAAEuD,aAAa;IACxBxD,UAAU,EAAEoE,cAAc;IAC1BxE,SAAS,EAAExG,EAAE,CAACwG,SAAS,EAAE,kBAAkB,CAAC;IAC5CsB,GAAG,EAAEA;EACP,CAAC,CAAC,EAAE,aAAa5H,KAAK,CAAC6M,aAAa,CAAC7L,YAAY,EAAE;IACjD4F,OAAO,EAAEoD,WAAW;IACpBzD,QAAQ,EAAEH,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;IACzBE,SAAS,EAAExG,EAAE,CAACuE,kBAAkB,EAAE,iBAAiB;EACrD,CAAC,EAAE,aAAarE,KAAK,CAAC6M,aAAa,CAACpM,iBAAiB,EAAE7B,QAAQ,CAAC,CAAC,CAAC,EAAE0F,UAAU,EAAE;IAC9EtC,KAAK,EAAEwK,SAAS;IAChBQ,eAAe,EAAE9E,SAAS,CAAClG,KAAK;IAChCiL,YAAY,EAAE/E,SAAS,CAACW,IAAI;IAC5BrC,IAAI,EAAEA,IAAI;IACVpC,QAAQ,EAAEA,QAAQ;IAClBF,QAAQ,EAAEmE,UAAU;IACpB6E,WAAW,EAAE,CAAC,CAAC9G,MAAM;IACrB3C,UAAU,EAAEiE,aAAa;IACzBE,GAAG,EAAEC,SAAS;IACdpB,YAAY,EAAEA,YAAY;IAC1BjD,QAAQ,EAAEqI,iBAAiB;IAC3BsB,UAAU,EAAE/D,cAAc;IAC1BgE,gBAAgB,EAAErB,oBAAoB;IACtChI,WAAW,EAAEA,WAAW;IACxBjB,WAAW,EAAEA;EACf,CAAC,CAAC,CAAC,EAAE,aAAa9C,KAAK,CAAC6M,aAAa,CAAC/K,WAAW,EAAE;IACjDuL,OAAO,EAAE,IAAI;IACb1J,IAAI,EAAEA,IAAI;IACV2J,IAAI,EAAE1J,UAAU;IAChB2J,OAAO,EAAEzJ;EACX,CAAC,CAAC,CAAC,EAAE4I,iBAAiB,IAAI,aAAa1M,KAAK,CAAC6M,aAAa,CAAC3F,KAAK,EAAEtI,QAAQ,CAAC,CAAC,CAAC,EAAEiI,UAAU,EAAE;IACzF7C,MAAM,EAAEA,MAAM;IACd5B,IAAI,EAAEoF,WAAW;IACjBgG,UAAU,EAAEvJ,eAAe;IAC3BwJ,SAAS,EAAE/E,KAAK;IAChBgF,UAAU,EAAEA,CAAA,KAAM5F,OAAO,CAACvC,OAAO,CAACoI,cAAc;EAClD,CAAC,CAAC,EAAE,aAAa3N,KAAK,CAAC6M,aAAa,CAAC7F,aAAa,EAAEpI,QAAQ,CAAC,CAAC,CAAC,EAAE4F,SAAS,EAAE;IAC1EuB,EAAE,EAAEiC,MAAM;IACVzF,IAAI,EAAEA,IAAI;IACVgE,QAAQ,EAAE,CAAC,CAAC;IACZrC,QAAQ,EAAEA,QAAQ;IAClBb,OAAO,EAAEA,OAAO;IAChBI,UAAU,EAAEiE,aAAa;IACzBQ,SAAS,EAAEA,SAAS;IACpB0F,UAAU,EAAE7K,cAAc;IAC1B8K,WAAW,EAAEzK,eAAe;IAC5BF,eAAe,EAAEA,eAAe;IAChClB,KAAK,EAAE8G,YAAY;IACnB5G,QAAQ,EAAEA,CAAC4L,CAAC,EAAEC,IAAI,KAAKpE,YAAY,CAACmE,CAAC,EAAEC,IAAI,CAAClE,aAAa,CAAC;IAC1D,WAAW,EAAErC,WAAW,GAAG,QAAQ,GAAG0B,SAAS;IAC/C,iBAAiB,EAAEnB,OAAO;IAC1B,aAAa,EAAE,CAACP,WAAW;IAC3BI,GAAG,EAAEE,OAAO;IACZrD,QAAQ,EAAE;MACRE,SAAS,EAAEwC,OAAO,CAACjI,MAAM,GAAGiJ,SAAS,CAAC1D,QAAQ,CAACI,WAAW,GAAGsD,SAAS,CAAC1D,QAAQ,CAACE;IAClF;EACF,CAAC,CAAC,CAAC,EAAE6E,gBAAgB,IAAI,aAAaxJ,KAAK,CAAC6M,aAAa,CAACtM,eAAe,EAAE;IACzE+C,QAAQ,EAAEmG;EACZ,CAAC,EAAEtB,SAAS,CAAC1D,QAAQ,CAACK,YAAY,CAACwC,YAAY,EAAEI,aAAa,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC;AACFhC,gBAAgB,CAACsI,WAAW,GAAG,cAAc;AAC7CtI,gBAAgB,CAAC3D,SAAS,GAAGA,SAAS;AACtC,eAAe2D,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}