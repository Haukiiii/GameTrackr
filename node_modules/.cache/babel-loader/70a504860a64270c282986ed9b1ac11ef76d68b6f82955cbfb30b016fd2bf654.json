{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\Desktop\\\\TDDD27\\\\Ny mapp\\\\Second commit\\\\src\\\\pages\\\\GameInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../css/GameInfo.css\";\nimport ps5Image from '../pictures/PS5.png';\nimport ps4Image from '../pictures/PS5.png';\nimport ps3Image from '../pictures/PS5.png';\nimport xboxSX from '../pictures/PS5.png';\nimport XboxOne from '../pictures/PS5.png';\nimport Xbox360 from '../pictures/PS5.png';\nimport Switch from '../pictures/PS5.png';\nimport Pc from '../pictures/PS5.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '0fbb76c073e64b8a919b4c0f0cf05a0b';\nconst platformImages = {\n  \"PlayStation 5\": ps5Image,\n  \"PlayStation 4\": ps4Image,\n  \"PlayStation 3\": ps3Image,\n  \"Xbox Series S/X\": XboxSX,\n  \"Xbox one\": XboxOne,\n  \"Nintendo Switch\": Switch,\n  \"Pc\": Pc\n\n  // Add images for other platforms here\n};\n\nfunction GameInfo() {\n  _s();\n  const [game, setGame] = useState({});\n  const {\n    id\n  } = useParams();\n  const [screenshots, setScreenshots] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.rawg.io/api/games/${id}?key=${apiKey}`).then(res => res.json()).then(data => setGame(data)).catch(error => console.error('Error:', error));\n    fetch(`https://api.rawg.io/api/games/${id}/screenshots?key=${apiKey}`).then(res => res.json()).then(data => setScreenshots(data.results)).catch(error => console.error('Error:', error));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"Info-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"gameContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: game.background_image,\n        alt: game.name,\n        class: \"gameSplashart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: game.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Rating: \", game.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Released: \", game.released]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: game.description_raw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Platforms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), game.platforms.map(platform => /*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"platform\",\n        src: platformImages[platform.platform.name],\n        alt: platform.platform.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 3\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"gameContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-screenshots\",\n        children: screenshots.map(screenshot => /*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"InGameSS\",\n          src: screenshot.image,\n          alt: `Screenshot ${screenshot.id}`\n        }, screenshot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(GameInfo, \"BwiHx09YUU7mhLbTmumAqI8Eq6k=\", false, function () {\n  return [useParams];\n});\n_c = GameInfo;\nexport default GameInfo;\nvar _c;\n$RefreshReg$(_c, \"GameInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ps5Image","ps4Image","ps3Image","xboxSX","XboxOne","Xbox360","Switch","Pc","jsxDEV","_jsxDEV","apiKey","platformImages","XboxSX","GameInfo","_s","game","setGame","id","screenshots","setScreenshots","fetch","then","res","json","data","catch","error","console","results","class","children","src","background_image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","rating","released","description_raw","platforms","map","platform","className","screenshot","image","_c","$RefreshReg$"],"sources":["C:/Users/Viktor/Desktop/TDDD27/Ny mapp/Second commit/src/pages/GameInfo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"../css/GameInfo.css\";\r\n\r\nimport ps5Image from '../pictures/PS5.png'\r\nimport ps4Image from '../pictures/PS5.png'\r\nimport ps3Image from '../pictures/PS5.png'\r\nimport xboxSX from '../pictures/PS5.png'\r\nimport XboxOne from '../pictures/PS5.png'\r\nimport Xbox360 from '../pictures/PS5.png'\r\nimport Switch from '../pictures/PS5.png'\r\nimport Pc from '../pictures/PS5.png'\r\nconst apiKey = '0fbb76c073e64b8a919b4c0f0cf05a0b';\r\n\r\nconst platformImages = {\r\n    \"PlayStation 5\": ps5Image,\r\n    \"PlayStation 4\": ps4Image,\r\n    \"PlayStation 3\": ps3Image,\r\n    \"Xbox Series S/X\": XboxSX,\r\n    \"Xbox one\": XboxOne,\r\n    \"Nintendo Switch\": Switch,\r\n    \"Pc\": Pc,\r\n    \r\n    // Add images for other platforms here\r\n  };\r\n\r\n\r\nfunction GameInfo() {\r\n  const [game, setGame] = useState({});\r\n  const { id } = useParams();\r\n  const [screenshots, setScreenshots] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.rawg.io/api/games/${id}?key=${apiKey}`)\r\n      .then(res => res.json())\r\n      .then(data => setGame(data))\r\n      .catch(error => console.error('Error:', error));\r\n\r\n    fetch(`https://api.rawg.io/api/games/${id}/screenshots?key=${apiKey}`)\r\n      .then(res => res.json())\r\n      .then(data => setScreenshots(data.results))\r\n      .catch(error => console.error('Error:', error));\r\n  \r\n  }, [id]);\r\n\r\n  return (\r\n    <div class=\"Info-container\">\r\n        <div class=\"gameContainer\">\r\n        <img src={game.background_image} alt={game.name} class=\"gameSplashart\" />\r\n        <h1>{game.name}</h1>\r\n      <h4>Rating: {game.rating}</h4>\r\n      <h4>Released: {game.released}</h4>\r\n      \r\n      <h2>Description</h2>\r\n      <p>{game.description_raw}</p>\r\n      \r\n      <h2>Platforms</h2>\r\n      {game.platforms.map((platform) => (\r\n  <img class='platform' src={platformImages[platform.platform.name]} alt={platform.platform.name} />\r\n))}\r\n\r\n    </div>\r\n   \r\n    <div class=\"gameContainer\">\r\n    <div className=\"game-screenshots\">\r\n          {screenshots.map(screenshot => (\r\n            <img class= \"InGameSS\" key={screenshot.id} src={screenshot.image} alt={`Screenshot ${screenshot.id}`} />\r\n          ))}\r\n        \r\n        </div>\r\n   </div>\r\n    \r\n  \r\n</div>\r\n\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default GameInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}